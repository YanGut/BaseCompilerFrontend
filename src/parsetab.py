
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BRACE_L BRACE_R BREAK COMMA DIVIDE EQUAL FUNCTION GREATER GREATER_EQUAL IF LESS LESS_EQUAL MINUS NEWLINE NUMBER PARENTHESIS_L PARENTHESIS_R PLUS RETURN STRING TIMES VARIABLE WHILEprogram : function\n               | statementsfunction : FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_Rparams : VARIABLE\n              | VARIABLE COMMA params\n              | emptystatements : statement\n                  | statement statementsstatement : expression NEWLINE\n                 | WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R\n                 | IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R\n                 | BREAK\n                 | RETURN expressionstatement : VARIABLE ASSIGN expressionexpression : term\n                  | expression PLUS term\n                  | expression MINUS term\n                  | comparisoncomparison : expression GREATER term\n                  | expression LESS term\n                  | expression GREATER_EQUAL term\n                  | expression LESS_EQUAL term\n                  | expression EQUAL termterm : factor\n            | term TIMES factor\n            | term DIVIDE factorfactor : NUMBER\n              | VARIABLE\n              | PARENTHESIS_L expression PARENTHESIS_R\n              | STRINGempty :'
    
_lr_action_items = {'FUNCTION':([0,],[4,]),'WHILE':([0,7,11,13,14,15,16,17,21,23,33,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[9,9,-12,-15,-18,-24,-27,-30,-28,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,9,9,9,-10,-11,]),'IF':([0,7,11,13,14,15,16,17,21,23,33,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[10,10,-12,-15,-18,-24,-27,-30,-28,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,10,10,10,-10,-11,]),'BREAK':([0,7,11,13,14,15,16,17,21,23,33,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[11,11,-12,-15,-18,-24,-27,-30,-28,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,11,11,11,-10,-11,]),'RETURN':([0,7,11,13,14,15,16,17,21,23,33,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[12,12,-12,-15,-18,-24,-27,-30,-28,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,12,12,12,-10,-11,]),'VARIABLE':([0,4,6,7,11,12,13,14,15,16,17,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,55,57,58,60,64,65,],[5,18,21,5,-12,21,-15,-18,-24,-27,-30,21,-28,-9,21,21,21,21,21,21,21,21,21,-13,21,21,50,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,50,5,5,5,-10,-11,]),'NUMBER':([0,6,7,11,12,13,14,15,16,17,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[16,16,16,-12,16,-15,-18,-24,-27,-30,16,-28,-9,16,16,16,16,16,16,16,16,16,-13,16,16,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,16,16,16,-10,-11,]),'PARENTHESIS_L':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[6,6,6,31,32,-12,6,-15,-18,-24,-27,-30,36,6,-28,-9,6,6,6,6,6,6,6,6,6,-13,6,6,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,6,6,6,-10,-11,]),'STRING':([0,6,7,11,12,13,14,15,16,17,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,48,49,57,58,60,64,65,],[17,17,17,-12,17,-15,-18,-24,-27,-30,17,-28,-9,17,17,17,17,17,17,17,17,17,-13,17,17,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,17,17,17,-10,-11,]),'$end':([1,2,3,7,11,13,14,15,16,17,21,22,23,33,37,38,39,40,41,42,43,44,45,48,49,64,65,66,],[0,-1,-2,-7,-12,-15,-18,-24,-27,-30,-28,-8,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,-10,-11,-3,]),'ASSIGN':([5,],[19,]),'TIMES':([5,13,15,16,17,21,38,39,40,41,42,43,44,45,48,49,],[-28,34,-24,-27,-30,-28,-29,34,34,34,34,34,34,34,-25,-26,]),'DIVIDE':([5,13,15,16,17,21,38,39,40,41,42,43,44,45,48,49,],[-28,35,-24,-27,-30,-28,-29,35,35,35,35,35,35,35,-25,-26,]),'NEWLINE':([5,8,13,14,15,16,17,21,38,39,40,41,42,43,44,45,48,49,],[-28,23,-15,-18,-24,-27,-30,-28,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,]),'PLUS':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,24,-15,-18,-24,-27,-30,24,-28,24,24,-29,-16,-17,-19,-20,-21,-22,-23,24,24,-25,-26,]),'MINUS':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,25,-15,-18,-24,-27,-30,25,-28,25,25,-29,-16,-17,-19,-20,-21,-22,-23,25,25,-25,-26,]),'GREATER':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,26,-15,-18,-24,-27,-30,26,-28,26,26,-29,-16,-17,-19,-20,-21,-22,-23,26,26,-25,-26,]),'LESS':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,27,-15,-18,-24,-27,-30,27,-28,27,27,-29,-16,-17,-19,-20,-21,-22,-23,27,27,-25,-26,]),'GREATER_EQUAL':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,28,-15,-18,-24,-27,-30,28,-28,28,28,-29,-16,-17,-19,-20,-21,-22,-23,28,28,-25,-26,]),'LESS_EQUAL':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,29,-15,-18,-24,-27,-30,29,-28,29,29,-29,-16,-17,-19,-20,-21,-22,-23,29,29,-25,-26,]),'EQUAL':([5,8,13,14,15,16,17,20,21,33,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-28,30,-15,-18,-24,-27,-30,30,-28,30,30,-29,-16,-17,-19,-20,-21,-22,-23,30,30,-25,-26,]),'BRACE_R':([7,11,13,14,15,16,17,21,22,23,33,37,38,39,40,41,42,43,44,45,48,49,61,62,63,64,65,],[-7,-12,-15,-18,-24,-27,-30,-28,-8,-9,-13,-14,-29,-16,-17,-19,-20,-21,-22,-23,-25,-26,64,65,66,-10,-11,]),'PARENTHESIS_R':([13,14,15,16,17,20,21,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,59,],[-15,-18,-24,-27,-30,38,-28,-31,-29,-16,-17,-19,-20,-21,-22,-23,53,54,-25,-26,-4,56,-6,-31,-5,]),'COMMA':([50,],[55,]),'BRACE_L':([53,54,56,],[57,58,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'statements':([0,7,57,58,60,],[3,22,61,62,63,]),'statement':([0,7,57,58,60,],[7,7,7,7,7,]),'expression':([0,6,7,12,19,31,32,57,58,60,],[8,20,8,33,37,46,47,8,8,8,]),'term':([0,6,7,12,19,24,25,26,27,28,29,30,31,32,57,58,60,],[13,13,13,13,13,39,40,41,42,43,44,45,13,13,13,13,13,]),'comparison':([0,6,7,12,19,31,32,57,58,60,],[14,14,14,14,14,14,14,14,14,14,]),'factor':([0,6,7,12,19,24,25,26,27,28,29,30,31,32,34,35,57,58,60,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,48,49,15,15,15,]),'params':([36,55,],[51,59,]),'empty':([36,55,],[52,52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','sintatic.py',29),
  ('program -> statements','program',1,'p_program','sintatic.py',30),
  ('function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R','function',8,'p_function','sintatic.py',35),
  ('params -> VARIABLE','params',1,'p_params','sintatic.py',40),
  ('params -> VARIABLE COMMA params','params',3,'p_params','sintatic.py',41),
  ('params -> empty','params',1,'p_params','sintatic.py',42),
  ('statements -> statement','statements',1,'p_statements','sintatic.py',52),
  ('statements -> statement statements','statements',2,'p_statements','sintatic.py',53),
  ('statement -> expression NEWLINE','statement',2,'p_statement','sintatic.py',61),
  ('statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R','statement',7,'p_statement','sintatic.py',62),
  ('statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R','statement',7,'p_statement','sintatic.py',63),
  ('statement -> BREAK','statement',1,'p_statement','sintatic.py',64),
  ('statement -> RETURN expression','statement',2,'p_statement','sintatic.py',65),
  ('statement -> VARIABLE ASSIGN expression','statement',3,'p_statement_assignment','sintatic.py',79),
  ('expression -> term','expression',1,'p_expression','sintatic.py',84),
  ('expression -> expression PLUS term','expression',3,'p_expression','sintatic.py',85),
  ('expression -> expression MINUS term','expression',3,'p_expression','sintatic.py',86),
  ('expression -> comparison','expression',1,'p_expression','sintatic.py',87),
  ('comparison -> expression GREATER term','comparison',3,'p_comparison','sintatic.py',95),
  ('comparison -> expression LESS term','comparison',3,'p_comparison','sintatic.py',96),
  ('comparison -> expression GREATER_EQUAL term','comparison',3,'p_comparison','sintatic.py',97),
  ('comparison -> expression LESS_EQUAL term','comparison',3,'p_comparison','sintatic.py',98),
  ('comparison -> expression EQUAL term','comparison',3,'p_comparison','sintatic.py',99),
  ('term -> factor','term',1,'p_term','sintatic.py',104),
  ('term -> term TIMES factor','term',3,'p_term','sintatic.py',105),
  ('term -> term DIVIDE factor','term',3,'p_term','sintatic.py',106),
  ('factor -> NUMBER','factor',1,'p_factor','sintatic.py',114),
  ('factor -> VARIABLE','factor',1,'p_factor','sintatic.py',115),
  ('factor -> PARENTHESIS_L expression PARENTHESIS_R','factor',3,'p_factor','sintatic.py',116),
  ('factor -> STRING','factor',1,'p_factor','sintatic.py',117),
  ('empty -> <empty>','empty',0,'p_empty','sintatic.py',125),
]

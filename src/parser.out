Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    DELIMITER
    DIFF
    ELSE
    EQUALS
    FALSE
    FOR
    GT
    GTE
    IDENTIFIER
    LT
    LTE
    OPERATOR
    READ
    RETURN
    TRUE
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> var_declaration
Rule 5     statement -> if_statement
Rule 6     statement -> while_statement
Rule 7     statement -> function_definition
Rule 8     statement -> function_call
Rule 9     statement -> assignment
Rule 10    var_declaration -> type NAME SEMICOLON
Rule 11    type -> INT
Rule 12    type -> BOOL
Rule 13    type -> STRING
Rule 14    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 15    while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 16    function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 17    param_list -> param
Rule 18    param_list -> param_list COMMA param
Rule 19    param_list -> empty
Rule 20    param -> type NAME
Rule 21    function_call -> NAME LPAREN arg_list RPAREN SEMICOLON
Rule 22    arg_list -> expression
Rule 23    arg_list -> arg_list COMMA expression
Rule 24    arg_list -> empty
Rule 25    assignment -> NAME ASSIGN expression SEMICOLON
Rule 26    expression -> NAME
Rule 27    expression -> CONSTANT
Rule 28    expression -> FLOAT
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression TIMES expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression MOD expression
Rule 34    expression -> expression AND expression
Rule 35    expression -> expression OR expression
Rule 36    expression -> LPAREN expression RPAREN
Rule 37    empty -> <empty>

Terminals, with rules where they appear

AND                  : 34
ASSIGN               : 25
BOOL                 : 12
BREAK                : 
COMMA                : 18 23
COMMENT              : 
CONSTANT             : 27
DELIMITER            : 
DIFF                 : 
DIVIDE               : 32
ELSE                 : 
EQUALS               : 
FALSE                : 
FLOAT                : 28
FOR                  : 
GT                   : 
GTE                  : 
IDENTIFIER           : 
IF                   : 14
INT                  : 11
LBRACE               : 14 15 16
LPAREN               : 14 15 16 21 36
LT                   : 
LTE                  : 
MINUS                : 30
MOD                  : 33
NAME                 : 10 16 20 21 25 26
OPERATOR             : 
OR                   : 35
PLUS                 : 29
RBRACE               : 14 15 16
READ                 : 
RETURN               : 
RPAREN               : 14 15 16 21 36
SEMICOLON            : 10 21 25
STRING               : 13
TIMES                : 31
TRUE                 : 
WHILE                : 15
WRITE                : 
error                : 

Nonterminals, with rules where they appear

arg_list             : 21 23
assignment           : 9
empty                : 19 24
expression           : 14 15 22 23 25 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36
function_call        : 8
function_definition  : 7
if_statement         : 5
param                : 17 18
param_list           : 16 18
program              : 0
statement            : 2 3
statement_list       : 1 3 14 15 16
type                 : 10 16 20
var_declaration      : 4
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    $end            reduce using rule 1 (program -> statement_list .)
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    statement                      shift and go to state 17
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 3

    (2) statement_list -> statement .

    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    NAME            reduce using rule 2 (statement_list -> statement .)
    INT             reduce using rule 2 (statement_list -> statement .)
    BOOL            reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> var_declaration .

    IF              reduce using rule 4 (statement -> var_declaration .)
    WHILE           reduce using rule 4 (statement -> var_declaration .)
    NAME            reduce using rule 4 (statement -> var_declaration .)
    INT             reduce using rule 4 (statement -> var_declaration .)
    BOOL            reduce using rule 4 (statement -> var_declaration .)
    STRING          reduce using rule 4 (statement -> var_declaration .)
    $end            reduce using rule 4 (statement -> var_declaration .)
    RBRACE          reduce using rule 4 (statement -> var_declaration .)


state 5

    (5) statement -> if_statement .

    IF              reduce using rule 5 (statement -> if_statement .)
    WHILE           reduce using rule 5 (statement -> if_statement .)
    NAME            reduce using rule 5 (statement -> if_statement .)
    INT             reduce using rule 5 (statement -> if_statement .)
    BOOL            reduce using rule 5 (statement -> if_statement .)
    STRING          reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBRACE          reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> while_statement .

    IF              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    NAME            reduce using rule 6 (statement -> while_statement .)
    INT             reduce using rule 6 (statement -> while_statement .)
    BOOL            reduce using rule 6 (statement -> while_statement .)
    STRING          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    RBRACE          reduce using rule 6 (statement -> while_statement .)


state 7

    (7) statement -> function_definition .

    IF              reduce using rule 7 (statement -> function_definition .)
    WHILE           reduce using rule 7 (statement -> function_definition .)
    NAME            reduce using rule 7 (statement -> function_definition .)
    INT             reduce using rule 7 (statement -> function_definition .)
    BOOL            reduce using rule 7 (statement -> function_definition .)
    STRING          reduce using rule 7 (statement -> function_definition .)
    $end            reduce using rule 7 (statement -> function_definition .)
    RBRACE          reduce using rule 7 (statement -> function_definition .)


state 8

    (8) statement -> function_call .

    IF              reduce using rule 8 (statement -> function_call .)
    WHILE           reduce using rule 8 (statement -> function_call .)
    NAME            reduce using rule 8 (statement -> function_call .)
    INT             reduce using rule 8 (statement -> function_call .)
    BOOL            reduce using rule 8 (statement -> function_call .)
    STRING          reduce using rule 8 (statement -> function_call .)
    $end            reduce using rule 8 (statement -> function_call .)
    RBRACE          reduce using rule 8 (statement -> function_call .)


state 9

    (9) statement -> assignment .

    IF              reduce using rule 9 (statement -> assignment .)
    WHILE           reduce using rule 9 (statement -> assignment .)
    NAME            reduce using rule 9 (statement -> assignment .)
    INT             reduce using rule 9 (statement -> assignment .)
    BOOL            reduce using rule 9 (statement -> assignment .)
    STRING          reduce using rule 9 (statement -> assignment .)
    $end            reduce using rule 9 (statement -> assignment .)
    RBRACE          reduce using rule 9 (statement -> assignment .)


state 10

    (10) var_declaration -> type . NAME SEMICOLON
    (16) function_definition -> type . NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE

    NAME            shift and go to state 18


state 11

    (21) function_call -> NAME . LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> NAME . ASSIGN expression SEMICOLON

    LPAREN          shift and go to state 19
    ASSIGN          shift and go to state 20


state 12

    (14) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 21


state 13

    (15) while_statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 22


state 14

    (11) type -> INT .

    NAME            reduce using rule 11 (type -> INT .)


state 15

    (12) type -> BOOL .

    NAME            reduce using rule 12 (type -> BOOL .)


state 16

    (13) type -> STRING .

    NAME            reduce using rule 13 (type -> STRING .)


state 17

    (3) statement_list -> statement_list statement .

    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    NAME            reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 3 (statement_list -> statement_list statement .)
    STRING          reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 18

    (10) var_declaration -> type NAME . SEMICOLON
    (16) function_definition -> type NAME . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 23
    LPAREN          shift and go to state 24


state 19

    (21) function_call -> NAME LPAREN . arg_list RPAREN SEMICOLON
    (22) arg_list -> . expression
    (23) arg_list -> . arg_list COMMA expression
    (24) arg_list -> . empty
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN
    (37) empty -> .

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26
    RPAREN          reduce using rule 37 (empty -> .)
    COMMA           reduce using rule 37 (empty -> .)

    arg_list                       shift and go to state 27
    expression                     shift and go to state 28
    empty                          shift and go to state 29

state 20

    (25) assignment -> NAME ASSIGN . expression SEMICOLON
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 32

state 21

    (14) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 33

state 22

    (15) while_statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 34

state 23

    (10) var_declaration -> type NAME SEMICOLON .

    IF              reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    WHILE           reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    NAME            reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    INT             reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    BOOL            reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    STRING          reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    $end            reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)
    RBRACE          reduce using rule 10 (var_declaration -> type NAME SEMICOLON .)


state 24

    (16) function_definition -> type NAME LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (17) param_list -> . param
    (18) param_list -> . param_list COMMA param
    (19) param_list -> . empty
    (20) param -> . type NAME
    (37) empty -> .
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    RPAREN          reduce using rule 37 (empty -> .)
    COMMA           reduce using rule 37 (empty -> .)
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    type                           shift and go to state 35
    param_list                     shift and go to state 36
    param                          shift and go to state 37
    empty                          shift and go to state 38

state 25

    (26) expression -> NAME .

    PLUS            reduce using rule 26 (expression -> NAME .)
    MINUS           reduce using rule 26 (expression -> NAME .)
    TIMES           reduce using rule 26 (expression -> NAME .)
    DIVIDE          reduce using rule 26 (expression -> NAME .)
    MOD             reduce using rule 26 (expression -> NAME .)
    AND             reduce using rule 26 (expression -> NAME .)
    OR              reduce using rule 26 (expression -> NAME .)
    RPAREN          reduce using rule 26 (expression -> NAME .)
    COMMA           reduce using rule 26 (expression -> NAME .)
    SEMICOLON       reduce using rule 26 (expression -> NAME .)


state 26

    (36) expression -> LPAREN . expression RPAREN
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 39

state 27

    (21) function_call -> NAME LPAREN arg_list . RPAREN SEMICOLON
    (23) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 40
    COMMA           shift and go to state 41


state 28

    (22) arg_list -> expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          reduce using rule 22 (arg_list -> expression .)
    COMMA           reduce using rule 22 (arg_list -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 29

    (24) arg_list -> empty .

    RPAREN          reduce using rule 24 (arg_list -> empty .)
    COMMA           reduce using rule 24 (arg_list -> empty .)


state 30

    (27) expression -> CONSTANT .

    PLUS            reduce using rule 27 (expression -> CONSTANT .)
    MINUS           reduce using rule 27 (expression -> CONSTANT .)
    TIMES           reduce using rule 27 (expression -> CONSTANT .)
    DIVIDE          reduce using rule 27 (expression -> CONSTANT .)
    MOD             reduce using rule 27 (expression -> CONSTANT .)
    AND             reduce using rule 27 (expression -> CONSTANT .)
    OR              reduce using rule 27 (expression -> CONSTANT .)
    RPAREN          reduce using rule 27 (expression -> CONSTANT .)
    COMMA           reduce using rule 27 (expression -> CONSTANT .)
    SEMICOLON       reduce using rule 27 (expression -> CONSTANT .)


state 31

    (28) expression -> FLOAT .

    PLUS            reduce using rule 28 (expression -> FLOAT .)
    MINUS           reduce using rule 28 (expression -> FLOAT .)
    TIMES           reduce using rule 28 (expression -> FLOAT .)
    DIVIDE          reduce using rule 28 (expression -> FLOAT .)
    MOD             reduce using rule 28 (expression -> FLOAT .)
    AND             reduce using rule 28 (expression -> FLOAT .)
    OR              reduce using rule 28 (expression -> FLOAT .)
    RPAREN          reduce using rule 28 (expression -> FLOAT .)
    COMMA           reduce using rule 28 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 28 (expression -> FLOAT .)


state 32

    (25) assignment -> NAME ASSIGN expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 49
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 33

    (14) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 34

    (15) while_statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 35

    (20) param -> type . NAME

    NAME            shift and go to state 52


state 36

    (16) function_definition -> type NAME LPAREN param_list . RPAREN LBRACE statement_list RBRACE
    (18) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 53
    COMMA           shift and go to state 54


state 37

    (17) param_list -> param .

    RPAREN          reduce using rule 17 (param_list -> param .)
    COMMA           reduce using rule 17 (param_list -> param .)


state 38

    (19) param_list -> empty .

    RPAREN          reduce using rule 19 (param_list -> empty .)
    COMMA           reduce using rule 19 (param_list -> empty .)


state 39

    (36) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 40

    (21) function_call -> NAME LPAREN arg_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 56


state 41

    (23) arg_list -> arg_list COMMA . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 57

state 42

    (29) expression -> expression PLUS . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 58

state 43

    (30) expression -> expression MINUS . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 59

state 44

    (31) expression -> expression TIMES . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 60

state 45

    (32) expression -> expression DIVIDE . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 61

state 46

    (33) expression -> expression MOD . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 62

state 47

    (34) expression -> expression AND . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 63

state 48

    (35) expression -> expression OR . expression
    (26) expression -> . NAME
    (27) expression -> . CONSTANT
    (28) expression -> . FLOAT
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression MOD expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 25
    CONSTANT        shift and go to state 30
    FLOAT           shift and go to state 31
    LPAREN          shift and go to state 26

    expression                     shift and go to state 64

state 49

    (25) assignment -> NAME ASSIGN expression SEMICOLON .

    IF              reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    INT             reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 25 (assignment -> NAME ASSIGN expression SEMICOLON .)


state 50

    (14) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 65


state 51

    (15) while_statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 66


state 52

    (20) param -> type NAME .

    RPAREN          reduce using rule 20 (param -> type NAME .)
    COMMA           reduce using rule 20 (param -> type NAME .)


state 53

    (16) function_definition -> type NAME LPAREN param_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 67


state 54

    (18) param_list -> param_list COMMA . param
    (20) param -> . type NAME
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    param                          shift and go to state 68
    type                           shift and go to state 35

state 55

    (36) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> LPAREN expression RPAREN .)


state 56

    (21) function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .

    IF              reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    NAME            reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    INT             reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    BOOL            reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    STRING          reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    $end            reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (function_call -> NAME LPAREN arg_list RPAREN SEMICOLON .)


state 57

    (23) arg_list -> arg_list COMMA expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    RPAREN          reduce using rule 23 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 23 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 58

    (29) expression -> expression PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 29 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression PLUS expression .) ]


state 59

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 30 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression MINUS expression .) ]


state 60

    (31) expression -> expression TIMES expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 31 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 31 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression TIMES expression .) ]


state 61

    (32) expression -> expression DIVIDE expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]


state 62

    (33) expression -> expression MOD expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 33 (expression -> expression MOD expression .)
    COMMA           reduce using rule 33 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression MOD expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression MOD expression .) ]


state 63

    (34) expression -> expression AND expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 34 (expression -> expression AND expression .)
    COMMA           reduce using rule 34 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression AND expression .) ]


state 64

    (35) expression -> expression OR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . MOD expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 35 (expression -> expression OR expression .)
    COMMA           reduce using rule 35 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    MOD             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PLUS            [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression OR expression .) ]


state 65

    (14) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    statement_list                 shift and go to state 69
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 66

    (15) while_statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    statement_list                 shift and go to state 70
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 67

    (16) function_definition -> type NAME LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    type                           shift and go to state 10
    statement_list                 shift and go to state 71
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9

state 68

    (18) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 18 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 18 (param_list -> param_list COMMA param .)


state 69

    (14) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    RBRACE          shift and go to state 72
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    statement                      shift and go to state 17
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 70

    (15) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    RBRACE          shift and go to state 73
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    statement                      shift and go to state 17
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9
    type                           shift and go to state 10

state 71

    (16) function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . function_definition
    (8) statement -> . function_call
    (9) statement -> . assignment
    (10) var_declaration -> . type NAME SEMICOLON
    (14) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (15) while_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (16) function_definition -> . type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE
    (21) function_call -> . NAME LPAREN arg_list RPAREN SEMICOLON
    (25) assignment -> . NAME ASSIGN expression SEMICOLON
    (11) type -> . INT
    (12) type -> . BOOL
    (13) type -> . STRING

    RBRACE          shift and go to state 74
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    NAME            shift and go to state 11
    INT             shift and go to state 14
    BOOL            shift and go to state 15
    STRING          shift and go to state 16

    type                           shift and go to state 10
    statement                      shift and go to state 17
    var_declaration                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    function_definition            shift and go to state 7
    function_call                  shift and go to state 8
    assignment                     shift and go to state 9

state 72

    (14) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .

    IF              reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NAME            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 14 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 73

    (15) while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    IF              reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NAME            reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 15 (while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 74

    (16) function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    IF              reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    NAME            reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    INT             reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 16 (function_definition -> type NAME LPAREN param_list RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for MOD in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for MOD in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for MOD in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for MOD in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for MOD in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for MOD in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for MOD in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift

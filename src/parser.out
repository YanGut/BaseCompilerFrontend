Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     program -> statements
Rule 3     function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R
Rule 4     params -> VARIABLE
Rule 5     params -> VARIABLE COMMA params
Rule 6     params -> empty
Rule 7     statements -> statement
Rule 8     statements -> statement statements
Rule 9     statement -> expression NEWLINE
Rule 10    statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
Rule 11    statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
Rule 12    statement -> BREAK
Rule 13    statement -> RETURN expression
Rule 14    statement -> VARIABLE ASSIGN expression
Rule 15    expression -> term
Rule 16    expression -> expression PLUS term
Rule 17    expression -> expression MINUS term
Rule 18    expression -> comparison
Rule 19    comparison -> expression GREATER term
Rule 20    comparison -> expression LESS term
Rule 21    comparison -> expression GREATER_EQUAL term
Rule 22    comparison -> expression LESS_EQUAL term
Rule 23    comparison -> expression EQUAL term
Rule 24    term -> factor
Rule 25    term -> term TIMES factor
Rule 26    term -> term DIVIDE factor
Rule 27    factor -> NUMBER
Rule 28    factor -> VARIABLE
Rule 29    factor -> PARENTHESIS_L expression PARENTHESIS_R
Rule 30    factor -> STRING
Rule 31    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14
BRACE_L              : 3 10 11
BRACE_R              : 3 10 11
BREAK                : 12
COMMA                : 5
DIVIDE               : 26
EQUAL                : 23
FUNCTION             : 3
GREATER              : 19
GREATER_EQUAL        : 21
IF                   : 11
LESS                 : 20
LESS_EQUAL           : 22
MINUS                : 17
NEWLINE              : 9
NUMBER               : 27
PARENTHESIS_L        : 3 10 11 29
PARENTHESIS_R        : 3 10 11 29
PLUS                 : 16
RETURN               : 13
STRING               : 30
TIMES                : 25
VARIABLE             : 3 4 5 14 28
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

comparison           : 18
empty                : 6
expression           : 9 10 11 13 14 16 17 19 20 21 22 23 29
factor               : 24 25 26
function             : 1
params               : 3 5
program              : 0
statement            : 7 8
statements           : 2 3 8 10 11
term                 : 15 16 17 19 20 21 22 23 25 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) program -> . statements
    (3) function -> . FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R
    (7) statements -> . statement
    (8) statements -> . statement statements
    (9) statement -> . expression NEWLINE
    (10) statement -> . WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (11) statement -> . IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (12) statement -> . BREAK
    (13) statement -> . RETURN expression
    (14) statement -> . VARIABLE ASSIGN expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    FUNCTION        shift and go to state 4
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    VARIABLE        shift and go to state 5
    NUMBER          shift and go to state 16
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    program                        shift and go to state 1
    function                       shift and go to state 2
    statements                     shift and go to state 3
    statement                      shift and go to state 7
    expression                     shift and go to state 8
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> function .

    $end            reduce using rule 1 (program -> function .)


state 3

    (2) program -> statements .

    $end            reduce using rule 2 (program -> statements .)


state 4

    (3) function -> FUNCTION . VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R

    VARIABLE        shift and go to state 18


state 5

    (14) statement -> VARIABLE . ASSIGN expression
    (28) factor -> VARIABLE .

    ASSIGN          shift and go to state 19
    TIMES           reduce using rule 28 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 28 (factor -> VARIABLE .)
    NEWLINE         reduce using rule 28 (factor -> VARIABLE .)
    PLUS            reduce using rule 28 (factor -> VARIABLE .)
    MINUS           reduce using rule 28 (factor -> VARIABLE .)
    GREATER         reduce using rule 28 (factor -> VARIABLE .)
    LESS            reduce using rule 28 (factor -> VARIABLE .)
    GREATER_EQUAL   reduce using rule 28 (factor -> VARIABLE .)
    LESS_EQUAL      reduce using rule 28 (factor -> VARIABLE .)
    EQUAL           reduce using rule 28 (factor -> VARIABLE .)


state 6

    (29) factor -> PARENTHESIS_L . expression PARENTHESIS_R
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 20
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 7

    (7) statements -> statement .
    (8) statements -> statement . statements
    (7) statements -> . statement
    (8) statements -> . statement statements
    (9) statement -> . expression NEWLINE
    (10) statement -> . WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (11) statement -> . IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (12) statement -> . BREAK
    (13) statement -> . RETURN expression
    (14) statement -> . VARIABLE ASSIGN expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    $end            reduce using rule 7 (statements -> statement .)
    BRACE_R         reduce using rule 7 (statements -> statement .)
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    VARIABLE        shift and go to state 5
    NUMBER          shift and go to state 16
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    statement                      shift and go to state 7
    statements                     shift and go to state 22
    expression                     shift and go to state 8
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 8

    (9) statement -> expression . NEWLINE
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    NEWLINE         shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 9

    (10) statement -> WHILE . PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R

    PARENTHESIS_L   shift and go to state 31


state 10

    (11) statement -> IF . PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R

    PARENTHESIS_L   shift and go to state 32


state 11

    (12) statement -> BREAK .

    WHILE           reduce using rule 12 (statement -> BREAK .)
    IF              reduce using rule 12 (statement -> BREAK .)
    BREAK           reduce using rule 12 (statement -> BREAK .)
    RETURN          reduce using rule 12 (statement -> BREAK .)
    VARIABLE        reduce using rule 12 (statement -> BREAK .)
    NUMBER          reduce using rule 12 (statement -> BREAK .)
    PARENTHESIS_L   reduce using rule 12 (statement -> BREAK .)
    STRING          reduce using rule 12 (statement -> BREAK .)
    $end            reduce using rule 12 (statement -> BREAK .)
    BRACE_R         reduce using rule 12 (statement -> BREAK .)


state 12

    (13) statement -> RETURN . expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 33
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 13

    (15) expression -> term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 15 (expression -> term .)
    PLUS            reduce using rule 15 (expression -> term .)
    MINUS           reduce using rule 15 (expression -> term .)
    GREATER         reduce using rule 15 (expression -> term .)
    LESS            reduce using rule 15 (expression -> term .)
    GREATER_EQUAL   reduce using rule 15 (expression -> term .)
    LESS_EQUAL      reduce using rule 15 (expression -> term .)
    EQUAL           reduce using rule 15 (expression -> term .)
    PARENTHESIS_R   reduce using rule 15 (expression -> term .)
    WHILE           reduce using rule 15 (expression -> term .)
    IF              reduce using rule 15 (expression -> term .)
    BREAK           reduce using rule 15 (expression -> term .)
    RETURN          reduce using rule 15 (expression -> term .)
    VARIABLE        reduce using rule 15 (expression -> term .)
    NUMBER          reduce using rule 15 (expression -> term .)
    PARENTHESIS_L   reduce using rule 15 (expression -> term .)
    STRING          reduce using rule 15 (expression -> term .)
    $end            reduce using rule 15 (expression -> term .)
    BRACE_R         reduce using rule 15 (expression -> term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 14

    (18) expression -> comparison .

    NEWLINE         reduce using rule 18 (expression -> comparison .)
    PLUS            reduce using rule 18 (expression -> comparison .)
    MINUS           reduce using rule 18 (expression -> comparison .)
    GREATER         reduce using rule 18 (expression -> comparison .)
    LESS            reduce using rule 18 (expression -> comparison .)
    GREATER_EQUAL   reduce using rule 18 (expression -> comparison .)
    LESS_EQUAL      reduce using rule 18 (expression -> comparison .)
    EQUAL           reduce using rule 18 (expression -> comparison .)
    PARENTHESIS_R   reduce using rule 18 (expression -> comparison .)
    WHILE           reduce using rule 18 (expression -> comparison .)
    IF              reduce using rule 18 (expression -> comparison .)
    BREAK           reduce using rule 18 (expression -> comparison .)
    RETURN          reduce using rule 18 (expression -> comparison .)
    VARIABLE        reduce using rule 18 (expression -> comparison .)
    NUMBER          reduce using rule 18 (expression -> comparison .)
    PARENTHESIS_L   reduce using rule 18 (expression -> comparison .)
    STRING          reduce using rule 18 (expression -> comparison .)
    $end            reduce using rule 18 (expression -> comparison .)
    BRACE_R         reduce using rule 18 (expression -> comparison .)


state 15

    (24) term -> factor .

    TIMES           reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    NEWLINE         reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    GREATER         reduce using rule 24 (term -> factor .)
    LESS            reduce using rule 24 (term -> factor .)
    GREATER_EQUAL   reduce using rule 24 (term -> factor .)
    LESS_EQUAL      reduce using rule 24 (term -> factor .)
    EQUAL           reduce using rule 24 (term -> factor .)
    PARENTHESIS_R   reduce using rule 24 (term -> factor .)
    WHILE           reduce using rule 24 (term -> factor .)
    IF              reduce using rule 24 (term -> factor .)
    BREAK           reduce using rule 24 (term -> factor .)
    RETURN          reduce using rule 24 (term -> factor .)
    VARIABLE        reduce using rule 24 (term -> factor .)
    NUMBER          reduce using rule 24 (term -> factor .)
    PARENTHESIS_L   reduce using rule 24 (term -> factor .)
    STRING          reduce using rule 24 (term -> factor .)
    $end            reduce using rule 24 (term -> factor .)
    BRACE_R         reduce using rule 24 (term -> factor .)


state 16

    (27) factor -> NUMBER .

    TIMES           reduce using rule 27 (factor -> NUMBER .)
    DIVIDE          reduce using rule 27 (factor -> NUMBER .)
    NEWLINE         reduce using rule 27 (factor -> NUMBER .)
    PLUS            reduce using rule 27 (factor -> NUMBER .)
    MINUS           reduce using rule 27 (factor -> NUMBER .)
    GREATER         reduce using rule 27 (factor -> NUMBER .)
    LESS            reduce using rule 27 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 27 (factor -> NUMBER .)
    LESS_EQUAL      reduce using rule 27 (factor -> NUMBER .)
    EQUAL           reduce using rule 27 (factor -> NUMBER .)
    PARENTHESIS_R   reduce using rule 27 (factor -> NUMBER .)
    WHILE           reduce using rule 27 (factor -> NUMBER .)
    IF              reduce using rule 27 (factor -> NUMBER .)
    BREAK           reduce using rule 27 (factor -> NUMBER .)
    RETURN          reduce using rule 27 (factor -> NUMBER .)
    VARIABLE        reduce using rule 27 (factor -> NUMBER .)
    NUMBER          reduce using rule 27 (factor -> NUMBER .)
    PARENTHESIS_L   reduce using rule 27 (factor -> NUMBER .)
    STRING          reduce using rule 27 (factor -> NUMBER .)
    $end            reduce using rule 27 (factor -> NUMBER .)
    BRACE_R         reduce using rule 27 (factor -> NUMBER .)


state 17

    (30) factor -> STRING .

    TIMES           reduce using rule 30 (factor -> STRING .)
    DIVIDE          reduce using rule 30 (factor -> STRING .)
    NEWLINE         reduce using rule 30 (factor -> STRING .)
    PLUS            reduce using rule 30 (factor -> STRING .)
    MINUS           reduce using rule 30 (factor -> STRING .)
    GREATER         reduce using rule 30 (factor -> STRING .)
    LESS            reduce using rule 30 (factor -> STRING .)
    GREATER_EQUAL   reduce using rule 30 (factor -> STRING .)
    LESS_EQUAL      reduce using rule 30 (factor -> STRING .)
    EQUAL           reduce using rule 30 (factor -> STRING .)
    PARENTHESIS_R   reduce using rule 30 (factor -> STRING .)
    WHILE           reduce using rule 30 (factor -> STRING .)
    IF              reduce using rule 30 (factor -> STRING .)
    BREAK           reduce using rule 30 (factor -> STRING .)
    RETURN          reduce using rule 30 (factor -> STRING .)
    VARIABLE        reduce using rule 30 (factor -> STRING .)
    NUMBER          reduce using rule 30 (factor -> STRING .)
    PARENTHESIS_L   reduce using rule 30 (factor -> STRING .)
    STRING          reduce using rule 30 (factor -> STRING .)
    $end            reduce using rule 30 (factor -> STRING .)
    BRACE_R         reduce using rule 30 (factor -> STRING .)


state 18

    (3) function -> FUNCTION VARIABLE . PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R

    PARENTHESIS_L   shift and go to state 36


state 19

    (14) statement -> VARIABLE ASSIGN . expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 37
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 20

    (29) factor -> PARENTHESIS_L expression . PARENTHESIS_R
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    PARENTHESIS_R   shift and go to state 38
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 21

    (28) factor -> VARIABLE .

    TIMES           reduce using rule 28 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 28 (factor -> VARIABLE .)
    PARENTHESIS_R   reduce using rule 28 (factor -> VARIABLE .)
    PLUS            reduce using rule 28 (factor -> VARIABLE .)
    MINUS           reduce using rule 28 (factor -> VARIABLE .)
    GREATER         reduce using rule 28 (factor -> VARIABLE .)
    LESS            reduce using rule 28 (factor -> VARIABLE .)
    GREATER_EQUAL   reduce using rule 28 (factor -> VARIABLE .)
    LESS_EQUAL      reduce using rule 28 (factor -> VARIABLE .)
    EQUAL           reduce using rule 28 (factor -> VARIABLE .)
    WHILE           reduce using rule 28 (factor -> VARIABLE .)
    IF              reduce using rule 28 (factor -> VARIABLE .)
    BREAK           reduce using rule 28 (factor -> VARIABLE .)
    RETURN          reduce using rule 28 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 28 (factor -> VARIABLE .)
    NUMBER          reduce using rule 28 (factor -> VARIABLE .)
    PARENTHESIS_L   reduce using rule 28 (factor -> VARIABLE .)
    STRING          reduce using rule 28 (factor -> VARIABLE .)
    $end            reduce using rule 28 (factor -> VARIABLE .)
    BRACE_R         reduce using rule 28 (factor -> VARIABLE .)
    NEWLINE         reduce using rule 28 (factor -> VARIABLE .)


state 22

    (8) statements -> statement statements .

    $end            reduce using rule 8 (statements -> statement statements .)
    BRACE_R         reduce using rule 8 (statements -> statement statements .)


state 23

    (9) statement -> expression NEWLINE .

    WHILE           reduce using rule 9 (statement -> expression NEWLINE .)
    IF              reduce using rule 9 (statement -> expression NEWLINE .)
    BREAK           reduce using rule 9 (statement -> expression NEWLINE .)
    RETURN          reduce using rule 9 (statement -> expression NEWLINE .)
    VARIABLE        reduce using rule 9 (statement -> expression NEWLINE .)
    NUMBER          reduce using rule 9 (statement -> expression NEWLINE .)
    PARENTHESIS_L   reduce using rule 9 (statement -> expression NEWLINE .)
    STRING          reduce using rule 9 (statement -> expression NEWLINE .)
    $end            reduce using rule 9 (statement -> expression NEWLINE .)
    BRACE_R         reduce using rule 9 (statement -> expression NEWLINE .)


state 24

    (16) expression -> expression PLUS . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 39
    factor                         shift and go to state 15

state 25

    (17) expression -> expression MINUS . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 40
    factor                         shift and go to state 15

state 26

    (19) comparison -> expression GREATER . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 41
    factor                         shift and go to state 15

state 27

    (20) comparison -> expression LESS . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 42
    factor                         shift and go to state 15

state 28

    (21) comparison -> expression GREATER_EQUAL . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 43
    factor                         shift and go to state 15

state 29

    (22) comparison -> expression LESS_EQUAL . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 44
    factor                         shift and go to state 15

state 30

    (23) comparison -> expression EQUAL . term
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    term                           shift and go to state 45
    factor                         shift and go to state 15

state 31

    (10) statement -> WHILE PARENTHESIS_L . expression PARENTHESIS_R BRACE_L statements BRACE_R
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 46
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 32

    (11) statement -> IF PARENTHESIS_L . expression PARENTHESIS_R BRACE_L statements BRACE_R
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 47
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 33

    (13) statement -> RETURN expression .
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    WHILE           reduce using rule 13 (statement -> RETURN expression .)
    IF              reduce using rule 13 (statement -> RETURN expression .)
    BREAK           reduce using rule 13 (statement -> RETURN expression .)
    RETURN          reduce using rule 13 (statement -> RETURN expression .)
    VARIABLE        reduce using rule 13 (statement -> RETURN expression .)
    NUMBER          reduce using rule 13 (statement -> RETURN expression .)
    PARENTHESIS_L   reduce using rule 13 (statement -> RETURN expression .)
    STRING          reduce using rule 13 (statement -> RETURN expression .)
    $end            reduce using rule 13 (statement -> RETURN expression .)
    BRACE_R         reduce using rule 13 (statement -> RETURN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 34

    (25) term -> term TIMES . factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    factor                         shift and go to state 48

state 35

    (26) term -> term DIVIDE . factor
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    NUMBER          shift and go to state 16
    VARIABLE        shift and go to state 21
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    factor                         shift and go to state 49

state 36

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L . params PARENTHESIS_R BRACE_L statements BRACE_R
    (4) params -> . VARIABLE
    (5) params -> . VARIABLE COMMA params
    (6) params -> . empty
    (31) empty -> .

    VARIABLE        shift and go to state 50
    PARENTHESIS_R   reduce using rule 31 (empty -> .)

    params                         shift and go to state 51
    empty                          shift and go to state 52

state 37

    (14) statement -> VARIABLE ASSIGN expression .
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    WHILE           reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    IF              reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    BREAK           reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    RETURN          reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    VARIABLE        reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    NUMBER          reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    PARENTHESIS_L   reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    STRING          reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    $end            reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    BRACE_R         reduce using rule 14 (statement -> VARIABLE ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 38

    (29) factor -> PARENTHESIS_L expression PARENTHESIS_R .

    TIMES           reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    DIVIDE          reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    NEWLINE         reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    PLUS            reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    MINUS           reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    GREATER         reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    LESS            reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    GREATER_EQUAL   reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    LESS_EQUAL      reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    EQUAL           reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    PARENTHESIS_R   reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    WHILE           reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    IF              reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    BREAK           reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    RETURN          reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    VARIABLE        reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    NUMBER          reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    PARENTHESIS_L   reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    STRING          reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    $end            reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)
    BRACE_R         reduce using rule 29 (factor -> PARENTHESIS_L expression PARENTHESIS_R .)


state 39

    (16) expression -> expression PLUS term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 16 (expression -> expression PLUS term .)
    PLUS            reduce using rule 16 (expression -> expression PLUS term .)
    MINUS           reduce using rule 16 (expression -> expression PLUS term .)
    GREATER         reduce using rule 16 (expression -> expression PLUS term .)
    LESS            reduce using rule 16 (expression -> expression PLUS term .)
    GREATER_EQUAL   reduce using rule 16 (expression -> expression PLUS term .)
    LESS_EQUAL      reduce using rule 16 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 16 (expression -> expression PLUS term .)
    PARENTHESIS_R   reduce using rule 16 (expression -> expression PLUS term .)
    WHILE           reduce using rule 16 (expression -> expression PLUS term .)
    IF              reduce using rule 16 (expression -> expression PLUS term .)
    BREAK           reduce using rule 16 (expression -> expression PLUS term .)
    RETURN          reduce using rule 16 (expression -> expression PLUS term .)
    VARIABLE        reduce using rule 16 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 16 (expression -> expression PLUS term .)
    PARENTHESIS_L   reduce using rule 16 (expression -> expression PLUS term .)
    STRING          reduce using rule 16 (expression -> expression PLUS term .)
    $end            reduce using rule 16 (expression -> expression PLUS term .)
    BRACE_R         reduce using rule 16 (expression -> expression PLUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 40

    (17) expression -> expression MINUS term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 17 (expression -> expression MINUS term .)
    PLUS            reduce using rule 17 (expression -> expression MINUS term .)
    MINUS           reduce using rule 17 (expression -> expression MINUS term .)
    GREATER         reduce using rule 17 (expression -> expression MINUS term .)
    LESS            reduce using rule 17 (expression -> expression MINUS term .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression MINUS term .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 17 (expression -> expression MINUS term .)
    PARENTHESIS_R   reduce using rule 17 (expression -> expression MINUS term .)
    WHILE           reduce using rule 17 (expression -> expression MINUS term .)
    IF              reduce using rule 17 (expression -> expression MINUS term .)
    BREAK           reduce using rule 17 (expression -> expression MINUS term .)
    RETURN          reduce using rule 17 (expression -> expression MINUS term .)
    VARIABLE        reduce using rule 17 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 17 (expression -> expression MINUS term .)
    PARENTHESIS_L   reduce using rule 17 (expression -> expression MINUS term .)
    STRING          reduce using rule 17 (expression -> expression MINUS term .)
    $end            reduce using rule 17 (expression -> expression MINUS term .)
    BRACE_R         reduce using rule 17 (expression -> expression MINUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 41

    (19) comparison -> expression GREATER term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 19 (comparison -> expression GREATER term .)
    PLUS            reduce using rule 19 (comparison -> expression GREATER term .)
    MINUS           reduce using rule 19 (comparison -> expression GREATER term .)
    GREATER         reduce using rule 19 (comparison -> expression GREATER term .)
    LESS            reduce using rule 19 (comparison -> expression GREATER term .)
    GREATER_EQUAL   reduce using rule 19 (comparison -> expression GREATER term .)
    LESS_EQUAL      reduce using rule 19 (comparison -> expression GREATER term .)
    EQUAL           reduce using rule 19 (comparison -> expression GREATER term .)
    PARENTHESIS_R   reduce using rule 19 (comparison -> expression GREATER term .)
    WHILE           reduce using rule 19 (comparison -> expression GREATER term .)
    IF              reduce using rule 19 (comparison -> expression GREATER term .)
    BREAK           reduce using rule 19 (comparison -> expression GREATER term .)
    RETURN          reduce using rule 19 (comparison -> expression GREATER term .)
    VARIABLE        reduce using rule 19 (comparison -> expression GREATER term .)
    NUMBER          reduce using rule 19 (comparison -> expression GREATER term .)
    PARENTHESIS_L   reduce using rule 19 (comparison -> expression GREATER term .)
    STRING          reduce using rule 19 (comparison -> expression GREATER term .)
    $end            reduce using rule 19 (comparison -> expression GREATER term .)
    BRACE_R         reduce using rule 19 (comparison -> expression GREATER term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 42

    (20) comparison -> expression LESS term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 20 (comparison -> expression LESS term .)
    PLUS            reduce using rule 20 (comparison -> expression LESS term .)
    MINUS           reduce using rule 20 (comparison -> expression LESS term .)
    GREATER         reduce using rule 20 (comparison -> expression LESS term .)
    LESS            reduce using rule 20 (comparison -> expression LESS term .)
    GREATER_EQUAL   reduce using rule 20 (comparison -> expression LESS term .)
    LESS_EQUAL      reduce using rule 20 (comparison -> expression LESS term .)
    EQUAL           reduce using rule 20 (comparison -> expression LESS term .)
    PARENTHESIS_R   reduce using rule 20 (comparison -> expression LESS term .)
    WHILE           reduce using rule 20 (comparison -> expression LESS term .)
    IF              reduce using rule 20 (comparison -> expression LESS term .)
    BREAK           reduce using rule 20 (comparison -> expression LESS term .)
    RETURN          reduce using rule 20 (comparison -> expression LESS term .)
    VARIABLE        reduce using rule 20 (comparison -> expression LESS term .)
    NUMBER          reduce using rule 20 (comparison -> expression LESS term .)
    PARENTHESIS_L   reduce using rule 20 (comparison -> expression LESS term .)
    STRING          reduce using rule 20 (comparison -> expression LESS term .)
    $end            reduce using rule 20 (comparison -> expression LESS term .)
    BRACE_R         reduce using rule 20 (comparison -> expression LESS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 43

    (21) comparison -> expression GREATER_EQUAL term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    PLUS            reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    MINUS           reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    GREATER         reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    LESS            reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    GREATER_EQUAL   reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    LESS_EQUAL      reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    EQUAL           reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    PARENTHESIS_R   reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    WHILE           reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    IF              reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    BREAK           reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    RETURN          reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    VARIABLE        reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    NUMBER          reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    PARENTHESIS_L   reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    STRING          reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    $end            reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    BRACE_R         reduce using rule 21 (comparison -> expression GREATER_EQUAL term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 44

    (22) comparison -> expression LESS_EQUAL term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    PLUS            reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    MINUS           reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    GREATER         reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    LESS            reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    GREATER_EQUAL   reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    LESS_EQUAL      reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    EQUAL           reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    PARENTHESIS_R   reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    WHILE           reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    IF              reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    BREAK           reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    RETURN          reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    VARIABLE        reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    NUMBER          reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    PARENTHESIS_L   reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    STRING          reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    $end            reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    BRACE_R         reduce using rule 22 (comparison -> expression LESS_EQUAL term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 45

    (23) comparison -> expression EQUAL term .
    (25) term -> term . TIMES factor
    (26) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 23 (comparison -> expression EQUAL term .)
    PLUS            reduce using rule 23 (comparison -> expression EQUAL term .)
    MINUS           reduce using rule 23 (comparison -> expression EQUAL term .)
    GREATER         reduce using rule 23 (comparison -> expression EQUAL term .)
    LESS            reduce using rule 23 (comparison -> expression EQUAL term .)
    GREATER_EQUAL   reduce using rule 23 (comparison -> expression EQUAL term .)
    LESS_EQUAL      reduce using rule 23 (comparison -> expression EQUAL term .)
    EQUAL           reduce using rule 23 (comparison -> expression EQUAL term .)
    PARENTHESIS_R   reduce using rule 23 (comparison -> expression EQUAL term .)
    WHILE           reduce using rule 23 (comparison -> expression EQUAL term .)
    IF              reduce using rule 23 (comparison -> expression EQUAL term .)
    BREAK           reduce using rule 23 (comparison -> expression EQUAL term .)
    RETURN          reduce using rule 23 (comparison -> expression EQUAL term .)
    VARIABLE        reduce using rule 23 (comparison -> expression EQUAL term .)
    NUMBER          reduce using rule 23 (comparison -> expression EQUAL term .)
    PARENTHESIS_L   reduce using rule 23 (comparison -> expression EQUAL term .)
    STRING          reduce using rule 23 (comparison -> expression EQUAL term .)
    $end            reduce using rule 23 (comparison -> expression EQUAL term .)
    BRACE_R         reduce using rule 23 (comparison -> expression EQUAL term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 46

    (10) statement -> WHILE PARENTHESIS_L expression . PARENTHESIS_R BRACE_L statements BRACE_R
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    PARENTHESIS_R   shift and go to state 53
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 47

    (11) statement -> IF PARENTHESIS_L expression . PARENTHESIS_R BRACE_L statements BRACE_R
    (16) expression -> expression . PLUS term
    (17) expression -> expression . MINUS term
    (19) comparison -> expression . GREATER term
    (20) comparison -> expression . LESS term
    (21) comparison -> expression . GREATER_EQUAL term
    (22) comparison -> expression . LESS_EQUAL term
    (23) comparison -> expression . EQUAL term

    PARENTHESIS_R   shift and go to state 54
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GREATER         shift and go to state 26
    LESS            shift and go to state 27
    GREATER_EQUAL   shift and go to state 28
    LESS_EQUAL      shift and go to state 29
    EQUAL           shift and go to state 30


state 48

    (25) term -> term TIMES factor .

    TIMES           reduce using rule 25 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 25 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 25 (term -> term TIMES factor .)
    PLUS            reduce using rule 25 (term -> term TIMES factor .)
    MINUS           reduce using rule 25 (term -> term TIMES factor .)
    GREATER         reduce using rule 25 (term -> term TIMES factor .)
    LESS            reduce using rule 25 (term -> term TIMES factor .)
    GREATER_EQUAL   reduce using rule 25 (term -> term TIMES factor .)
    LESS_EQUAL      reduce using rule 25 (term -> term TIMES factor .)
    EQUAL           reduce using rule 25 (term -> term TIMES factor .)
    PARENTHESIS_R   reduce using rule 25 (term -> term TIMES factor .)
    WHILE           reduce using rule 25 (term -> term TIMES factor .)
    IF              reduce using rule 25 (term -> term TIMES factor .)
    BREAK           reduce using rule 25 (term -> term TIMES factor .)
    RETURN          reduce using rule 25 (term -> term TIMES factor .)
    VARIABLE        reduce using rule 25 (term -> term TIMES factor .)
    NUMBER          reduce using rule 25 (term -> term TIMES factor .)
    PARENTHESIS_L   reduce using rule 25 (term -> term TIMES factor .)
    STRING          reduce using rule 25 (term -> term TIMES factor .)
    $end            reduce using rule 25 (term -> term TIMES factor .)
    BRACE_R         reduce using rule 25 (term -> term TIMES factor .)


state 49

    (26) term -> term DIVIDE factor .

    TIMES           reduce using rule 26 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 26 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 26 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 26 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 26 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 26 (term -> term DIVIDE factor .)
    LESS            reduce using rule 26 (term -> term DIVIDE factor .)
    GREATER_EQUAL   reduce using rule 26 (term -> term DIVIDE factor .)
    LESS_EQUAL      reduce using rule 26 (term -> term DIVIDE factor .)
    EQUAL           reduce using rule 26 (term -> term DIVIDE factor .)
    PARENTHESIS_R   reduce using rule 26 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 26 (term -> term DIVIDE factor .)
    IF              reduce using rule 26 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 26 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 26 (term -> term DIVIDE factor .)
    VARIABLE        reduce using rule 26 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 26 (term -> term DIVIDE factor .)
    PARENTHESIS_L   reduce using rule 26 (term -> term DIVIDE factor .)
    STRING          reduce using rule 26 (term -> term DIVIDE factor .)
    $end            reduce using rule 26 (term -> term DIVIDE factor .)
    BRACE_R         reduce using rule 26 (term -> term DIVIDE factor .)


state 50

    (4) params -> VARIABLE .
    (5) params -> VARIABLE . COMMA params

    PARENTHESIS_R   reduce using rule 4 (params -> VARIABLE .)
    COMMA           shift and go to state 55


state 51

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L params . PARENTHESIS_R BRACE_L statements BRACE_R

    PARENTHESIS_R   shift and go to state 56


state 52

    (6) params -> empty .

    PARENTHESIS_R   reduce using rule 6 (params -> empty .)


state 53

    (10) statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R . BRACE_L statements BRACE_R

    BRACE_L         shift and go to state 57


state 54

    (11) statement -> IF PARENTHESIS_L expression PARENTHESIS_R . BRACE_L statements BRACE_R

    BRACE_L         shift and go to state 58


state 55

    (5) params -> VARIABLE COMMA . params
    (4) params -> . VARIABLE
    (5) params -> . VARIABLE COMMA params
    (6) params -> . empty
    (31) empty -> .

    VARIABLE        shift and go to state 50
    PARENTHESIS_R   reduce using rule 31 (empty -> .)

    params                         shift and go to state 59
    empty                          shift and go to state 52

state 56

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R . BRACE_L statements BRACE_R

    BRACE_L         shift and go to state 60


state 57

    (10) statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L . statements BRACE_R
    (7) statements -> . statement
    (8) statements -> . statement statements
    (9) statement -> . expression NEWLINE
    (10) statement -> . WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (11) statement -> . IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (12) statement -> . BREAK
    (13) statement -> . RETURN expression
    (14) statement -> . VARIABLE ASSIGN expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    WHILE           shift and go to state 9
    IF              shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    VARIABLE        shift and go to state 5
    NUMBER          shift and go to state 16
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 8
    statements                     shift and go to state 61
    statement                      shift and go to state 7
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 58

    (11) statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L . statements BRACE_R
    (7) statements -> . statement
    (8) statements -> . statement statements
    (9) statement -> . expression NEWLINE
    (10) statement -> . WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (11) statement -> . IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (12) statement -> . BREAK
    (13) statement -> . RETURN expression
    (14) statement -> . VARIABLE ASSIGN expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    WHILE           shift and go to state 9
    IF              shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    VARIABLE        shift and go to state 5
    NUMBER          shift and go to state 16
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    expression                     shift and go to state 8
    statements                     shift and go to state 62
    statement                      shift and go to state 7
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 59

    (5) params -> VARIABLE COMMA params .

    PARENTHESIS_R   reduce using rule 5 (params -> VARIABLE COMMA params .)


state 60

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L . statements BRACE_R
    (7) statements -> . statement
    (8) statements -> . statement statements
    (9) statement -> . expression NEWLINE
    (10) statement -> . WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (11) statement -> . IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R
    (12) statement -> . BREAK
    (13) statement -> . RETURN expression
    (14) statement -> . VARIABLE ASSIGN expression
    (15) expression -> . term
    (16) expression -> . expression PLUS term
    (17) expression -> . expression MINUS term
    (18) expression -> . comparison
    (24) term -> . factor
    (25) term -> . term TIMES factor
    (26) term -> . term DIVIDE factor
    (19) comparison -> . expression GREATER term
    (20) comparison -> . expression LESS term
    (21) comparison -> . expression GREATER_EQUAL term
    (22) comparison -> . expression LESS_EQUAL term
    (23) comparison -> . expression EQUAL term
    (27) factor -> . NUMBER
    (28) factor -> . VARIABLE
    (29) factor -> . PARENTHESIS_L expression PARENTHESIS_R
    (30) factor -> . STRING

    WHILE           shift and go to state 9
    IF              shift and go to state 10
    BREAK           shift and go to state 11
    RETURN          shift and go to state 12
    VARIABLE        shift and go to state 5
    NUMBER          shift and go to state 16
    PARENTHESIS_L   shift and go to state 6
    STRING          shift and go to state 17

    statements                     shift and go to state 63
    statement                      shift and go to state 7
    expression                     shift and go to state 8
    term                           shift and go to state 13
    comparison                     shift and go to state 14
    factor                         shift and go to state 15

state 61

    (10) statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements . BRACE_R

    BRACE_R         shift and go to state 64


state 62

    (11) statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements . BRACE_R

    BRACE_R         shift and go to state 65


state 63

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements . BRACE_R

    BRACE_R         shift and go to state 66


state 64

    (10) statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .

    WHILE           reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    IF              reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    BREAK           reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    RETURN          reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    VARIABLE        reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    NUMBER          reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    PARENTHESIS_L   reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    STRING          reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    $end            reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    BRACE_R         reduce using rule 10 (statement -> WHILE PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)


state 65

    (11) statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .

    WHILE           reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    IF              reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    BREAK           reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    RETURN          reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    VARIABLE        reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    NUMBER          reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    PARENTHESIS_L   reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    STRING          reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    $end            reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)
    BRACE_R         reduce using rule 11 (statement -> IF PARENTHESIS_L expression PARENTHESIS_R BRACE_L statements BRACE_R .)


state 66

    (3) function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R .

    $end            reduce using rule 3 (function -> FUNCTION VARIABLE PARENTHESIS_L params PARENTHESIS_R BRACE_L statements BRACE_R .)

